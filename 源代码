#include<stdio.h>
#include<iostream>
using namespace std;
const int N = 100;
bool s[N];
int clostest[N];
int lowcost[N];
void prim(int n, int u0, int c[N][N])
{
	s[u0] = true;
	int i;
	int j;
	for (i = 1; i <= n; i++)
	{
		if (i != u0)
		{
			lowcost[i] = c[u0][i];
			clostest[i] = u0;
			s[i] = false;
		}
		else
			lowcost[i] = 0;
	}
	for (i = 1; i <= n; j++)
	{
		int temp = 10000;
		int t = u0;;
		for (j = 1; j <= n; j++)
		{
			if (!s[j] && lowcost[j] < temp)
			{
				t = j;
				temp = lowcost[j];
			}
		}
		if (t == u0)
			break;
		s[t] = true;
		for (j = 1; j <= n; j++)
		{
			if (!s[j] && c[t][j] < lowcost[j])
			{
				lowcost[j] = c[t][j];
				clostest[j] = t;
			}
		}
	}
}
int main()
{
	int u0,m,n,c[N][N],u,v,w;
	int sumcost = 0;
	while (1)
	{
		scanf("%d", &n);
		if (n == 0)
		{
			break;
		}
		m = n * (n - 1) / 2;
		for (int i = 1; i <= n; i++)
		{
			for (int j = 1; j <= n; j++)
			{
				c[i][j] = 10000;
			}
		}
		for (int i = 1; i <= m; i++)
		{
			scanf("%d%d%d", &u, &v, &w);
			c[u][v] = c[v][u] = w;
		}
		prim(n, 1, c);
		for (int i = 1; i <= n; i++)
		{
			sumcost += lowcost[i];
		}
		printf("%d\n", sumcost);
		sumcost = 0;
	}
}

